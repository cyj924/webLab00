EX1)

CREATE TABLE student(
	student_id INTEGER PRIMARY KEY,
	name VARCHAR(10),
	year SMALLINT DEFAULT "1",
	dpet_no INTEGER,
	major VARCHAR(20) NOT NULL
);

CREATE TABLE department(
	dept_no INTEGER AUTO_INCREMENT PRIMARY KEY,
	dept_name VARCHAR(20) UNIQUE,
	office VARCHAR(20),
	office_tel VARCHAR(13) NOT NULL
);

ALTER TABLE student 
CHANGE COLUMN major major VARCHAR(40) NOT NULL;

ALTER TABLE student
ADD COLUMN gender VARCHAR(10);

ALTER TABLE department
CHANGE COLUMN  dept_name dept_name VARCHAR(40) UNIQUE;

ALTER TABLE department
CHANGE COLUMN office office VARCHAR(30);

EX2)

ALTER TABLE student
DROP COLUMN gender;

INSERT INTO student VALUES (20070002, 'James Bond', 3, 4, 'Business Administration’), (20060001, 'Queenie', 4, 4, 'Business Administration’), (20030001, 'Reonardo', 4, 2, 'Electronic Engineering’), (20040003, 'Julia', 3, 2, 'Electronic Engineering’), (20060002, 'Roosevelt', 3, 1, 'Computer Science’), (20100002, 'Fearne', 3, 4, 'Business Administration’), (20110001, 'Chloe', 2, 1, 'Computer Science’), (20080003, 'Amy', 4, 3, 'Law’), (20040002, 'Selina', 4, 5, 'English Literature’), (20070001, 'Ellen', 4, 4, 'Business Administration’), (20100001, 'Kathy', 3, 4, 'Business Administration’), (20110002, 'Lucy', 2, 2, 'Electronic Engineering’), (20030002, 'Michelle', 5, 1, 'Computer Science’), (20070003, 'April', 4, 3, 'Law’), (20070005, 'Alicia', 2, 5, 'English Literature’), (20100003, 'Yullia', 3, 1, 'Computer Science’), (20070007, 'Ashlee', 2, 4, 'Business Administration’);

INSERT INTO department VALUES (1,'Computer Science', 'Engineering building', '02-3290-0123’), (2,'Electronic Engineering', 'Engineering building', '02-3290-2345’), (3,'Law', 'Law building', '02-3290-7896’), (4,'Business Administration', 'Administration building', '02-3290-1112’), (5,'English Literature', 'Literature building', '02-3290-4412');

EX3)
1.
REPLACE INTO department VALUES (2,'Electronic and Electrical Engineering','Engineering building','02-3290-2345');

2.
INSERT INTO department VALUES(6,'Education','Education building','02-3290-2347');

3.
UPDATE student
SET dept_no=6
WHERE name='Chloe';

4.
DELETE FROM student WHERE name='Michelle';

5.
DELETE FROM student WHERE name='Fearne';

EX4)
1. select *
from student
where major='Computer Science';

2. select student_id,year,major
from student;

3. select *
from student
where year=3;

4. select *
from student
where year < 3;

5. select *
from student s,department d
where s.major='Business Administration' and s.dept_no=d.dept_no;

EX5)
1. SELECT *
FROM student
WHERE student_id LIKE “%2007%";

2. SELECT *
FROM student
ORDER BY student_id;

3. SELECT major,avg(year) as AVG_year
FROM students
GROUP BY major
HAVING AVG_year > 3;

4. SELECT *
FROM student
WHERE student_id LIKE “%2007%"
LIMIT 2;

EX6)
1. SELECT *
FROM roles r,movies m
WHERE r.movie_id=m.id and m.name="Pi";

2. SELECT a.first_name,a.last_name
FROM actors a,roles r,movies m
WHERE a.id=r.actor_id and r.movie_id=m.id and m.name="Pi";

3.select first_name,last_name 
from actors a
join roles r1 on r1.actor_id = a.id
join roles r2 on r2.actor_id = a.id
join movies m1 on m1.id = r1.movie_id
join movies m2 on m2.id = r2.movie_id
where m1.name = 'Kill Bill: Vol. 1' and m2.name = 'Kill Bill: Vol. 2';

4. select id,first_name,last_name,count(roles.movie_id) as cnt 
from actors 
join roles on actors.id=roles.actor_id 
group by id 
order by cnt desc 
limit 7;

5. SELECT genre,count(genre) as count 
FROM movies_genres 
GROUP BY genre having count 
ORDER BY count DESC 
LIMIT 3;

6. select first_name, last_name 
from movies_genres 
natural join movies_directors 
join directors on director_id=directors.id 
where genre='Thriller' 
group by id 
order by count(movie_id) desc 
limit 1;

EX7)
1. SELECT grade 
FROM grades g,courses c,students s 
WHERE  g.student_id=s.id and g.course_id=c.id and c.name='Computer Science 143';

2. SELECT s.name,grade 
FROM grades g,courses c,students s 
WHERE  g.student_id=s.id and g.course_id=c.id and c.name='Computer Science 143' and g.grade<= 'B-';

3. SELECT s.name 
FROM grades g,courses c,students s 
WHERE g.student_id=s.id and g.course_id=c.id and g.grade<='B-';

4. SELECT DISTINCT c.name 
FROM grades g,courses c,students s 
WHERE g.student_id=s.id and g.course_id=c.id 
GROUP BY c.name 
HAVING count(s.id) >= 2;

Extra
1
select name 
from movies
where year = 1995;

2
select count(*) people
from movies m
join roles on m.id = roles.movie_id
where m.name = "Lost in Translation";

3
select a.first_name, a.last_name, r.role
from movies m join roles r on m.id = r.movie_id
join actors a on a.id = r.actor_id
where m.name = "Lost in Translation";

4
select d.first_name, d.last_name, m.name
from movies m
join movies_directors md on m.id = md.movie_id
join directors d on d.id = md.director_id
where m.name = "Fight Club";

5
select count(*) maked
from movies m
join movies_directors md on m.id = md.movie_id
join directors d on d.id = md.director_id
where d.first_name = "Clint" and d.last_name = "Eastwood";

6
select m.name movie_name, d.first_name, d.last_name
from movies m
join movies_directors md on m.id = md.movie_id
join directors d on d.id = md.director_id
where d.first_name = "Clint" and d.last_name = "Eastwood";

7
select d.first_name, d.last_name
from movies_genres mg
join movies_directors md on mg.movie_id = md.movie_id
join directors d on d.id = md.director_id
where mg.genre = "Horror";

8
select a.first_name, a.last_name
from movies m
join movies_directors md on m.id = md.movie_id
join directors d on d.id = md.director_id
join roles r on r.movie_id = m.id
join actors a on a.id = r.actor_id
where d.first_name = "Christopher" and d.last_name = "Nolan";